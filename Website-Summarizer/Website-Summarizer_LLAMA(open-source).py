import requests
import ollama
import gradio as gr

from bs4 import BeautifulSoup
#from IPython.display import Markdown, display 

MODEL = "llama3.2"

#------------------------------------------------------------------------------------------------------------------------------------------------
class Website:
    url: str
    title: str
    text: str

    def __init__(self, url):
        self.url = url
        response = requests.get(url)
        soup = BeautifulSoup(response.content, 'html.parser')
        self.title = soup.title.string if soup.title else "No title found"
        for irrelevant in soup.body(["script", "style", "img", "input"]):
            irrelevant.decompose()
        self.text = soup.body.get_text(separator="\n", strip=True)

#------------------------------------------------------------------------------------------------------------------------------------------------

system_prompt = "You are an assistant that analyzes the contents of a website \
and provides a short summary, ignoring text that might be navigation related. \
Respond in markdown."

#------------------------------------------------------------------------------------------------------------------------------------------------

def user_prompt_for(website):
    user_prompt = f"You are looking at a website titled {website.title}"
    user_prompt += "\nThe contents of this website is as follows; \
please provide a short summary of this website in markdown. \
If it includes news or announcements, then summarize these too.\n\n"
    user_prompt += website.text
    return user_prompt

#------------------------------------------------------------------------------------------------------------------------------------------------

def messages_for(website):
    return [
        {"role": "system", "content": system_prompt},
        {"role": "user", "content": user_prompt_for(website)}
    ]

#------------------------------------------------------------------------------------------------------------------------------------------------

def summarize_url(url):
    try:
        website = Website(url)
        messages = messages_for(website)
        response = ollama.chat(model=MODEL, messages=messages)
        summary = response["message"]["content"]
        return summary
    except Exception as e:
        return f"Error: {str(e)}"

#------------------------------------------------------------------------------------------------------------------------------------------------

interface = gr.Interface(
    fn=summarize_url,
    inputs=gr.Textbox(label="URL:", placeholder="https://example.com"),
    outputs=gr.Markdown(label="Website Summary"),
    title="Website Summarizer",
    description="Enter a URL and get a summary generated by Llama 3.2 via Ollama."
)

if __name__ == "__main__":
    interface.launch()
